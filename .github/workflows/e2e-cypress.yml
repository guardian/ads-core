name: E2E Cypress
on:
  push:
    branches:
      - main
  workflow_dispatch:
  pull_request:

concurrency:
  group: 'e2e-${{ github.head_ref }}'
  cancel-in-progress: true

jobs:
  test:
    name: E2E Cypress
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        group: [1, 2, 3, 4, 5]
    services:
      DCR:
        # We always run our commercial code against the latest main of DCR
        # This does make our tests sensitive to changes in DCR
        # (e.g. imagine someone removes the top-above-nav slot from DCR)
        # This is something we accept in order to easily test our own code
        #
        # Note we use the containerised version of DCR, published from:
        # https://github.com/guardian/dotcom-rendering/blob/6a6df272/.github/workflows/container.yml
        image: ghcr.io/guardian/dotcom-rendering:main
        ports:
          - 3030:3030
        env:
          PORT: 3030
          COMMERCIAL_BUNDLE_URL: http://localhost:3031/graun.standalone.commercial.js
    steps:
      # Commercial
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: ./commercial

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: './commercial/.nvmrc'

      - name: Install dependencies
        run: yarn install --frozen-lockfile
        working-directory: ./commercial

      - name: Start Commercial server
        run: yarn serve & npx wait-on -v -i 1000 http://localhost:3031/graun.standalone.commercial.js
        working-directory: ./commercial

      - name: Run Cypress
        run: yarn cypress run --spec cypress/e2e/parallel-${{ matrix.group }}/*
        working-directory: ./commercial

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-videos
          path: commercial/cypress/videos

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: commercial/cypress/screenshots
